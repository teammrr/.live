import { SvelteComponentTyped } from "svelte";
import TreeViewItem from './TreeViewItem.svelte';
import type { TreeViewNode } from './types.js';
declare const __propDef: {
    props: {
        /** Provide data-driven nodes. */ nodes?: TreeViewNode[] | undefined;
        /** Enable tree-view selection */ selection?: boolean | undefined;
        /** Enable selection of multiple items. */ multiple?: boolean | undefined;
        treeItems?: TreeViewItem[] | undefined;
    };
    events: {
        change: Event;
        click: MouseEvent;
        toggle: CustomEvent<any>;
        keydown: KeyboardEvent;
        keyup: KeyboardEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type TreeViewDataDrivenItemProps = typeof __propDef.props;
export type TreeViewDataDrivenItemEvents = typeof __propDef.events;
export type TreeViewDataDrivenItemSlots = typeof __propDef.slots;
export default class TreeViewDataDrivenItem extends SvelteComponentTyped<TreeViewDataDrivenItemProps, TreeViewDataDrivenItemEvents, TreeViewDataDrivenItemSlots> {
}
export {};
