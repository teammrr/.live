import { SvelteComponentTyped } from "svelte";
import { slide } from 'svelte/transition';
import { type Transition, type TransitionParams } from '../../index.js';
type SlideTransition = typeof slide;
import type { AutocompleteOption } from './types.js';
declare class __sveltets_Render<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> {
    props(): {
        [x: string]: any;
        input?: unknown;
        options?: AutocompleteOption[] | undefined;
        limit?: number | undefined;
        allowlist?: unknown[] | undefined;
        denylist?: unknown[] | undefined;
        emptyState?: string | undefined;
        regionNav?: string | undefined;
        regionList?: string | undefined;
        regionItem?: string | undefined;
        regionButton?: string | undefined;
        regionEmpty?: string | undefined;
        transitions?: boolean | undefined;
        transitionIn?: TransitionIn | undefined;
        transitionInParams?: TransitionParams<TransitionIn> | undefined;
        transitionOut?: TransitionOut | undefined;
        transitionOutParams?: TransitionParams<TransitionOut> | undefined;
    };
    events(): {
        click: MouseEvent;
        keypress: KeyboardEvent;
        selection: CustomEvent<AutocompleteOption>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {};
}
export type AutocompleteProps<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['props']>;
export type AutocompleteEvents<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['events']>;
export type AutocompleteSlots<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['slots']>;
export default class Autocomplete<TransitionIn extends Transition = SlideTransition, TransitionOut extends Transition = SlideTransition> extends SvelteComponentTyped<AutocompleteProps<TransitionIn, TransitionOut>, AutocompleteEvents<TransitionIn, TransitionOut>, AutocompleteSlots<TransitionIn, TransitionOut>> {
}
export {};
